// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ApkgCreator;
//
//    var ankiDeckConfig = AnkiDeckConfig.FromJson(jsonString);

namespace ApkgCreator.AdditionalModels
{
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    public partial class AnkiDeckConfig
    {
        public DeckConfig DeckConfig { get; set; }
    }

    public partial class DeckConfig
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("replayq")]
        public bool Replayq { get; set; }

        [JsonProperty("lapse")]
        public Lapse Lapse { get; set; }

        [JsonProperty("rev")]
        public Rev Rev { get; set; }

        [JsonProperty("timer")]
        public long Timer { get; set; }

        [JsonProperty("maxTaken")]
        public long MaxTaken { get; set; }

        [JsonProperty("usn")]
        public long Usn { get; set; }

        [JsonProperty("new")]
        public NewItem New { get; set; }

        [JsonProperty("mod")]
        public long Mod { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("autoplay")]
        public bool Autoplay { get; set; }
    }

    public partial class Lapse
    {
        [JsonProperty("leechFails")]
        public long LeechFails { get; set; }

        [JsonProperty("minInt")]
        public long MinInt { get; set; }

        [JsonProperty("delays")]
        public List<long> Delays { get; set; }

        [JsonProperty("leechAction")]
        public long LeechAction { get; set; }

        [JsonProperty("mult")]
        public long Mult { get; set; }
    }

    public partial class NewItem
    {
        [JsonProperty("perDay")]
        public long PerDay { get; set; }

        [JsonProperty("delays")]
        public List<long> Delays { get; set; }

        [JsonProperty("separate")]
        public bool Separate { get; set; }

        [JsonProperty("ints")]
        public List<long> Ints { get; set; }

        [JsonProperty("initialFactor")]
        public long InitialFactor { get; set; }

        [JsonProperty("bury")]
        public bool Bury { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }
    }

    public partial class Rev
    {
        [JsonProperty("perDay")]
        public long PerDay { get; set; }

        [JsonProperty("fuzz")]
        public double Fuzz { get; set; }

        [JsonProperty("ivlFct")]
        public long IvlFct { get; set; }

        [JsonProperty("maxIvl")]
        public long MaxIvl { get; set; }

        [JsonProperty("ease4")]
        public double Ease4 { get; set; }

        [JsonProperty("bury")]
        public bool Bury { get; set; }

        [JsonProperty("minSpace")]
        public long MinSpace { get; set; }
    }
}
